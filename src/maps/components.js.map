{"version":3,"sources":["components.jsx"],"names":[],"mappings":"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","file":"components.js","sourcesContent":["import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport * as Content from './content.js';\n\n/* JUMBOTRON */\n\nexport const Subheader = (props) => <p className={props.styleName}>{props.text}</p>\n\nexport const Header = (props) => <h1 className='text-left'>{props.header}</h1>\n\nexport const Jumbotron = (props) => (\n        <div className=\"jumbotron\">\n            <Header header={props.header}/>\n            <Subheader styleName={'sub-header text-left'} text={props.name}/>\n            {props.misc.map((misc) => {\n                return <Subheader key={misc} styleName={'sub-header-2 text-left'} text={misc}/>\n            })}\n        </div>\n)\n\n/* PROJECT LIST*/\n\nexport class ProjectModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false, project: \"\", desc: \"\", date: \"\", task: [], url: []};\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.update = this.update.bind(this);\n    }\n    update(event) {\n        let el = event.target;\n        let children = el.children;\n        if (children.length===0) {\n            el = event.target.parentElement;\n            children = el.children;\n        }\n        let project = Content.detail.filter((detail) => {\n            return detail.project === children[0].innerHTML;\n        });\n        this.setState({ showModal: true, project: project[0].project,\n            desc: project[0].content, date: project[0].date, task: project[0].task, url: project[0].url});\n    }\n    open() {\n        this.setState({ showModal: true });\n    }\n    close() {\n        this.setState({ showModal: false });\n    }\n    componentDidMount() {\n        const projectElements = document.getElementsByClassName(\"project\");\n        for (var i=0; i<projectElements.length; i++) {\n            projectElements[i].addEventListener('click', this.update, false);\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Modal show={this.state.showModal} onHide={this.close}>\n                    <Modal.Header closeButton>\n                        <Modal.Title className=\"text-center modal-header-title\">\n                            {this.state.project}\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h4 className=\"modal-body-title\">When?</h4>\n                        <p className=\"modal-body-desc\">{this.state.date}</p>\n                        <p>\n                        {\n                            this.state.url.map((url) => {\n                                return <a key={url.key} target=\"_blank\" href={url.link}>{url.label}. </a>\n                            })\n                        }\n                        </p>\n                        <hr />\n                        <h4 className=\"modal-body-title\">What?</h4>\n                        <p className=\"modal-body-desc\">{this.state.desc}</p>\n                        <hr />\n                        <h4 className=\"modal-body-title\">Collaboration</h4>\n                        {\n                            this.state.task.map(function(task) {\n                                return (\n                                    <p className=\"modal-body-desc\" key={task}>\n                                        <span className=\"glyphicon glyphicon-menu-right\" aria-hidden=\"true\">\n                                        </span>\n                                        {task}\n                                    </p>);\n                            })\n                        }\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n};\n\nexport const Project = (props) => (\n    <article className=\"col-lg-6 project\">\n        <h4 className=\"project-title\">{props.project}</h4>\n        <p className=\"text-justify project-desc\">{props.desc}</p>\n    </article>\n)\n\nexport const ProjectList = (props) => (\n    <div className=\"row marketing\">\n        { props.data.map(function(data) { return <Project key={data.id} {...data} /> }) }\n        <ProjectModal />\n    </div>\n)\n\nexport const App = (props) => (\n    <section>\n        <Jumbotron header={props.header} name={props.name} misc={props.misc}/>\n        <ProjectList data={props.data} detail={props.detail} />\n    </section>\n)"],"sourceRoot":"/source/"}